--- ots-8.0.0/meson.build.orig	2019-08-30 10:52:55.000000000 +0200
+++ ots-8.0.0/meson.build	2019-10-09 19:45:16.139416093 +0200
@@ -38,52 +38,13 @@
                configuration: conf)
 
 
-brotli_includes = ['third_party/brotli/c/include']
-libbrotli = library('brotli',
-  'third_party/brotli/c/common/constants.h',
-  'third_party/brotli/c/common/dictionary.c',
-  'third_party/brotli/c/common/dictionary.h',
-  'third_party/brotli/c/common/transform.c',
-  'third_party/brotli/c/common/transform.h',
-  'third_party/brotli/c/common/version.h',
-  'third_party/brotli/c/dec/bit_reader.c',
-  'third_party/brotli/c/dec/bit_reader.h',
-  'third_party/brotli/c/dec/decode.c',
-  'third_party/brotli/c/dec/huffman.c',
-  'third_party/brotli/c/dec/huffman.h',
-  'third_party/brotli/c/dec/prefix.h',
-  'third_party/brotli/c/dec/state.c',
-  'third_party/brotli/c/dec/state.h',
-  'third_party/brotli/c/include/brotli/decode.h',
-  'third_party/brotli/c/include/brotli/port.h',
-  'third_party/brotli/c/include/brotli/types.h',
-  include_directories: include_directories(brotli_includes),
-)
-
+libbrotli = dependency('libbrotlidec')
 
-woff2_includes = ['third_party/brotli/c/include', 'third_party/woff2/include']
-libwoff2 = library('woff2',
-  'third_party/woff2/include/woff2/decode.h',
-  'third_party/woff2/include/woff2/output.h',
-  'third_party/woff2/src/buffer.h',
-  'third_party/woff2/src/port.h',
-  'third_party/woff2/src/round.h',
-  'third_party/woff2/src/store_bytes.h',
-  'third_party/woff2/src/table_tags.cc',
-  'third_party/woff2/src/table_tags.h',
-  'third_party/woff2/src/variable_length.cc',
-  'third_party/woff2/src/variable_length.h',
-  'third_party/woff2/src/woff2_common.cc',
-  'third_party/woff2/src/woff2_common.h',
-  'third_party/woff2/src/woff2_dec.cc',
-  'third_party/woff2/src/woff2_out.cc',
-  include_directories: include_directories(woff2_includes),
-)
+libwoff2 = dependency('libwoff2dec')
 
 
 ots_includes = [
   'include',
-  'third_party/woff2/include',
 ]
 
 ots_sources = [
@@ -167,10 +128,9 @@
   'src/vvar.h',
 ]
 
-ots_libs = [libbrotli, libwoff2]
+deps = [libbrotli, libwoff2]
 
 if get_option('graphite')
-  ots_includes += ['third_party/lz4/lib']
   ots_sources += [
     'src/feat.cc',
     'src/feat.h',
@@ -186,23 +146,25 @@
     'src/sill.h',
     'src/sill.cc',
   ]
-  liblz4 = library('lz4',
-    'third_party/lz4/lib/lz4.c',
-    'third_party/lz4/lib/lz4.h',
-  )
-  ots_libs += [liblz4]
+  liblz4 = dependency('liblz4')
+  deps += [liblz4]
 endif
 
 zlib = dependency('zlib', fallback : ['zlib', 'zlib_dep'])
+deps += [zlib]
 
-libots = library('ots',
+libots = library('otsanitizer',
   ots_sources,
   include_directories: include_directories(ots_includes),
-  link_with: ots_libs,
   cpp_args : '-DHAVE_CONFIG_H',
-  dependencies: zlib,
+  dependencies: deps,
+  install: true,
+  version: '0.0.0',
+  soversion: 0
 )
 
+install_headers(['include/opentype-sanitiser.h', 'include/ots-memory-stream.h'], subdir: 'ots')
+
 
 executable('ots-sanitize',
   'util/ots-sanitize.cc',
@@ -290,7 +252,7 @@
 endif
 
 
-gtest = dependency('gtest', fallback: ['gtest', 'gtest_main_dep'])
+gtest = dependency('gtest gtest_main', fallback: ['gtest', 'gtest_main_dep'])
 
 cff_charstring = executable('cff_charstring',
   'tests/cff_charstring_test.cc',
